import telebot
from telebot import types
import random
import sqlite3

bot = telebot.TeleBot("token")


# –°–ª—É—á–∞–π–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞
def send_random_items(message, items, count=5):
    for item in random.sample(items, count):
        bot.send_message(message.from_user.id, item)


technologies = [
    "–°–º–∞—Ä—Ç-—á–∞—Å—ã",
    "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
    "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ",
    "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫",
    "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ—á–∫–∏",
    "–¶–∏—Ñ—Ä–æ–≤–∞—è –∫–∞–º–µ—Ä–∞",
    "–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞",
    "–ò–≥—Ä–æ–≤—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
    "–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
    "–ò–≥—Ä–æ–≤–∞—è –º—ã—à—å",
    "–ò–≥—Ä–æ–≤–æ–µ –∫—Ä–µ—Å–ª–æ",
    "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É–º–Ω–æ–≥–æ –¥–æ–º–∞",
    "–£–º–Ω—ã–π —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç",
    "–£–º–Ω—ã–π –∑–≤–æ–Ω–æ–∫",
    "–†–æ–±–æ—Ç-–ø—ã–ª–µ—Å–æ—Å",
    "–£–º–Ω—ã–µ –≤–µ—Å—ã",
    "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞",
    "–£–º–Ω—ã–µ –Ω–∞—Ä—É—á–Ω—ã–µ —á–∞—Å—ã"
]
kitchen = [
    "–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–µ –Ω–æ–∂–∏",
    "–ö—É—Ö–æ–Ω–Ω—ã–π –∫–æ–º–±–∞–π–Ω",
    "–ë–ª–µ–Ω–¥–µ—Ä –≤—ã—Å–æ–∫–æ–π –º–æ—â–Ω–æ—Å—Ç–∏",
    "–ê—ç—Ä–æ–≥—Ä–∏–ª—å",
    "–§—Ä–∏—Ç—é—Ä–Ω–∏—Ü–∞",
    "–°–∫–æ–≤–æ—Ä–æ–¥–∞-–≥—Ä–∏–ª—å",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –≥—Ä–∏–ª—å",
    "–ö–æ—Ñ–µ–º–æ–ª–∫–∞",
    "–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞",
    "–ö–∞–ø—Å—É–ª—å–Ω–∞—è –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞",
    "–ú—É–ª—å—Ç–∏–≤–∞—Ä–∫–∞",
    "–°–æ–∫–æ–≤—ã–∂–∏–º–∞–ª–∫–∞",
    "–ú–∏–∫—Å–µ—Ä",
    "–í–∞–∫—É—É–º–Ω—ã–π —É–ø–∞–∫–æ–≤—â–∏–∫",
    "–ù–∞–±–æ—Ä –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–∞—Å—Ç—Ä—é–ª—å",
    "–ù–∞–±–æ—Ä –ø–æ—Å—É–¥—ã –∏–∑ —á—É–≥—É–Ω–∞",
    "–ù–∞–±–æ—Ä –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–æ–π –ø–æ—Å—É–¥—ã",
    "–ù–∞–±–æ—Ä —Å—Ç–æ–ª–æ–≤—ã—Ö –ø—Ä–∏–±–æ—Ä–æ–≤",
    "–ù–∞–±–æ—Ä –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Å—É—à–∏",
    "–°–µ—Ä–≤–∏—Ä–æ–≤–æ—á–Ω–∞—è –¥–æ—Å–∫–∞ –∏–∑ –º—Ä–∞–º–æ—Ä–∞",
    "–ù–∞–±–æ—Ä –¥–ª—è –≥—Ä–∏–ª—è"
]
healthAndBeauty = [
    "–ú–∞—Å—Å–∞–∂–µ—Ä –¥–ª—è —à–µ–∏ –∏ –ø–ª–µ—á",
    "–ú–∞—Å—Å–∞–∂–µ—Ä –¥–ª—è –Ω–æ–≥",
    "–ú–∞—Å—Å–∞–∂–µ—Ä –¥–ª—è —Ç–µ–ª–∞",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑—É–±–Ω–∞—è —â–µ—Ç–∫–∞",
    "–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞ (–Ω–∞–±–æ—Ä –∫–æ—Å–º–µ—Ç–∏–∫–∏)",
    "–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ (–Ω–∞–±–æ—Ä –∫–æ—Å–º–µ—Ç–∏–∫–∏)",
    "–ù–∞–±–æ—Ä –¥–ª—è –º–∞–Ω–∏–∫—é—Ä–∞ –∏ –ø–µ–¥–∏–∫—é—Ä–∞",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –±—Ä–∏—Ç–≤–∞",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç—Ä–∏–º–º–µ—Ä –¥–ª—è –≤–æ–ª–æ—Å",
    "–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç",
    "–ò–Ω—Ñ—Ä–∞–∫—Ä–∞—Å–Ω–∞—è –ª–∞–º–ø–∞ –¥–ª—è –ª–µ—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—É–¥–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
    "–ü–∞—Ä–æ–≤–æ–π –∏–Ω–≥–∞–ª—è—Ç–æ—Ä –¥–ª—è –ª–µ—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—É–¥–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
    "–ù–∞–±–æ—Ä –¥–ª—è –º–∞—Å—Å–∞–∂–∞ —Å—Ç–æ–ø",
    "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–∂–∏ —Å—Ç–æ–ø",
    "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –≤–µ—Å—ã",
    "–ù–∞–±–æ—Ä –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –Ω–æ–≥—Ç—è–º–∏",
    "–ù–∞–±–æ—Ä –¥–ª—è –±—Ä–∏—Ç—å—è –∏ —É—Ö–æ–¥–∞ –∑–∞ –±–æ—Ä–æ–¥–æ–π",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∞–±–µ—Ä –¥–ª—è —Ç–µ–ª–∞",
    "–ù–∞–±–æ—Ä –¥–ª—è —ç–ø–∏–ª—è—Ü–∏–∏",
    "–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π",
    "–ù–∞–±–æ—Ä –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —â–∏–ø—Ü—ã –¥–ª—è –≤—ã–ø—Ä—è–º–ª–µ–Ω–∏—è –≤–æ–ª–æ—Å)"
]
styleAndFashion = [
    "–°—Ç–∏–ª—å–Ω–∞—è —à–ª—è–ø–∞",
    "–ö–æ–∂–∞–Ω—ã–π —Ä–µ–º–µ–Ω—å",
    "–ù–∞—Ä—É—á–Ω—ã–µ —á–∞—Å—ã",
    "–°—É–º–∫–∞ –∏–ª–∏ —Ä—é–∫–∑–∞–∫",
    "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ—Å–∫–∏",
    "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≥–∞–ª—Å—Ç—É–∫",
    "–ó–æ–Ω—Ç–∏–∫",
    "–ü–µ—Ä—á–∞—Ç–∫–∏ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–æ–∂–∏",
    "–°–≤–∏—Ç–µ—Ä",
    "–§—É—Ç–±–æ–ª–∫–∞ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –ø—Ä–∏–Ω—Ç–æ–º",
    "–ö–æ–∂–∞–Ω–∞—è –ø–æ—Ä—Ç–º–æ–Ω–µ",
    "–ù–∞–±–æ—Ä —à–∞—Ä—Ñ–∞ –∏ –ø–µ—Ä—á–∞—Ç–æ–∫",
    "–£–¥–æ–±–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏",
    "–û—á–∫–∏ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ",
    "–ü–∏–¥–∂–∞–∫",
    "–ö—É—Ä—Ç–∫–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–æ–∂–∏",
    "–ë—Ä—é–∫–∏ –∏–∑ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–∫–∞–Ω–∏",
    "–°—Ç–∏–ª—å–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏",
    "–†—É–±–∞—à–∫–∞",
    "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±—Ä—é–∫–∏",
    "–ö–æ—à–µ–ª–µ–∫"
]
sportsAndRecreation = [
    "–ù–∞–¥—É–≤–Ω–æ–π –∫–∞—è–∫",
    "–†—é–∫–∑–∞–∫ –¥–ª—è –ø–µ—à–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫",
    "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≥—Ä–∏–ª—å",
    "–ù–∞–±–æ—Ä –¥–ª—è –ø–∏–∫–Ω–∏–∫–∞",
    "–ì–∞–º–∞–∫",
    "–ù–∞–±–æ—Ä –¥–ª—è –∏–≥—Ä—ã –≤ –±–∞–¥–º–∏–Ω—Ç–æ–Ω",
    "–†–æ–ª–∏–∫–æ–≤—ã–µ –∫–æ–Ω—å–∫–∏",
    "–°–∞–º–æ–∫–∞—Ç",
    "–ù–∞–±–æ—Ä –¥–ª—è –≥–æ–ª—å—Ñ–∞",
    "–í–µ–ª–æ—Å–∏–ø–µ–¥",
    "–ù–∞–±–æ—Ä –¥–ª—è –≥–æ—Ä–Ω–æ–≥–æ —Ç—É—Ä–∏–∑–º–∞",
    "–õ–æ–Ω–≥–±–æ—Ä–¥",
    "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –ø–∞–ª–∞—Ç–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å",
    "–ù–∞–±–æ—Ä –¥–ª—è –±–∞—Ä–±–µ–∫—é",
    "–ù–∞–¥—É–≤–Ω–æ–π –º–∞—Ç—Ä–∞—Å",
    "–°–∫–µ–π—Ç–±–æ—Ä–¥",
    "–°–º–∞—Ä—Ç-—á–∞—Å—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä—ã–±–∞–ª–∫–∏"
]
interior = [
    "–ö–∞—Ä—Ç–∏–Ω–∞",
    "–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –≤–∞–∑–∞",
    "–ù–∞–±–æ—Ä —Å–≤–µ—á–µ–π",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Å–≤–µ—á–Ω–∏–∫",
    "–ü–ª–µ–¥ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
    "–ö–Ω–∏–≥–∞ –ø–æ –¥–∏–∑–∞–π–Ω—É –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞",
    "–ù–∞–±–æ—Ä —Ñ–æ—Ç–æ—Ä–∞–º–æ–∫",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥—É—à–∫–∞",
    "–°–∫—É–ª—å–ø—Ç—É—Ä–∞",
    "–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ —á–∞—Å—ã",
    "–ö–æ–≤–µ—Ä",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥–Ω–æ—Å",
    "–ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–∏—Ñ—Ñ—É–∑–æ—Ä",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–≤–µ—á–∞ –≤ —Å—Ç–µ–∫–ª–µ",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–µ—Ö–æ–ª –Ω–∞ –ø–æ–¥—É—à–∫—É",
    "–°—Ç–∞—Ç—É—ç—Ç–∫–∞",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è",
    "–ù–∞–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–µ–∫–æ—Ä–∞ –∏–∑ —Å—Ç–µ–∫–ª–∞",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ–∫–∞–ª –¥–ª—è –≤–∏–Ω–∞",
    "–ü–∞–Ω–Ω–æ –Ω–∞—Å—Ç–µ–Ω–Ω–æ–µ",
    "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ç–µ—Ä–º–æ—Å"
]
creativity = [
    "–ù–∞–±–æ—Ä –¥–ª—è –≤—ã—à–∏–≤–∞–Ω–∏—è",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –∞–∫–≤–∞—Ä–µ–ª—å—é",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –º–∞—Å–ª–æ–º",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–π",
    "–ù–∞–±–æ—Ä –∫–∏—Å—Ç–µ–π –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è",
    "–ù–∞–±–æ—Ä –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è",
    "–ù–∞–±–æ—Ä —Ñ–ª–æ–º–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è",
    "–ù–∞–±–æ—Ä –¥–ª—è –ª–µ–ø–∫–∏",
    "–ù–∞–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–∫—Ä–∞—à–µ–Ω–∏–π",
    "–ù–∞–±–æ—Ä –¥–ª—è –≤—ã–∂–∏–≥–∞–Ω–∏—è –¥–µ—Ä–µ–≤–∞",
    "–ù–∞–±–æ—Ä –¥–ª—è —Å–∫—Ä–∞–ø–±—É–∫–∏–Ω–≥–∞",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä–µ–∑—å–±—ã –ø–æ –¥–µ—Ä–µ–≤—É",
    "–ù–∞–±–æ—Ä –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –∫–∞–ª–ª–∏–≥—Ä–∞—Ñ–∏–µ–π",
    "–ù–∞–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω –Ω–∞ –Ω–æ–º–µ—Ä–∞—Ö"
]
entertainment = [
    "–ö–∞—Ä—Ç–æ—á–Ω—ã–µ –∏–≥—Ä—ã",
    "–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã",
    "–ò–≥—Ä—ã –¥–ª—è Playstation",
    "–ò–≥—Ä—ã –¥–ª—è Xbox",
    "–ò–≥—Ä—ã –¥–ª—è Nintendo Switch",
    "–ö–Ω–∏–≥–∞",
    "–ö–Ω–∏–≥–∞ —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏",
    "–ü–∞–∑–ª",
    "–ö—É–±–∏–∫ –†—É–±–∏–∫–∞",
    "–ú–æ–∑–∞–∏–∫–∞",
    "–§–∏–≥—É—Ä–∫–∏ Funko Pop",
    "–ù–∞–±–æ—Ä Lego",
    "–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –∏–≥—Ä—É—à–∫–∞",
    "–î–µ—Ç—Å–∫–∞—è –∫–Ω–∏–≥–∞",
    "–ò–≥—Ä—É—à–∫–∞-—Ä–æ–±–æ—Ç",
    "–†–∞–¥–∏–æ—É–ø—Ä–∞–≤–ª—è–µ–º–∞—è –º–∞—à–∏–Ω–∞",
    "–î–µ—Ç—Å–∫–∏–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç",
    "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä"
]
diy = [
    "–ê–ª—å–±–æ–º —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏–ª–∏ —Ä–∏—Å—É–Ω–∫–∞–º–∏",
    "–í—è–∑–∞–Ω—ã–π —à–∞—Ä—Ñ –∏–ª–∏ —à–∞–ø–∫–∞",
    "–ù–∞–±–æ—Ä –º—ã–ª–∞, —Å–¥–µ–ª–∞–Ω–Ω–æ–≥–æ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö",
    "–°–≤–µ—á–∞, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è –≤—Ä—É—á–Ω—É—é",
    "–ë—Ä–∞—Å–ª–µ—Ç –∏–ª–∏ –∫–æ–ª—å–µ –∏–∑ –±–∏—Å–µ—Ä–∞",
    "–ö–∞—Ä—Ç–∏–Ω–∞, –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–∞—è –≤–∞–º–∏",
    "–ö—Ä—É–∂–∫–∞, —Ä–∞—Å–ø–∏—Å–∞–Ω–Ω–∞—è –≤—Ä—É—á–Ω—É—é",
    "–ö–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ",
    "–ë—Ä–µ–ª–æ–∫ –¥–ª—è –∫–ª—é—á–µ–π, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∏–∑ –ø–æ–ª–∏–º–µ—Ä–Ω–æ–π –≥–ª–∏–Ω—ã",
    "–ù–∞—Å—Ç–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —Å–¥–µ–ª–∞–Ω–Ω—ã–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ",
    "–ö—É–∫–ª–∞ –∏–ª–∏ –º—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞, —Å—à–∏—Ç–∞—è –≤—Ä—É—á–Ω—É—é",
    "–°–æ–∑–¥–∞—Ç—å —Ñ—É—Ç–±–æ–ª–∫—É —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—Ç–æ–º",
    "–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω—É –∏–∑ –±—É—Ç—ã–ª–æ—á–Ω—ã—Ö –∫—Ä—ã—à–µ–∫",
    "–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–∞–∂ –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
]


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start(message):
    database = sqlite3.connect("db_giftmate.db")
    c = database.cursor()
    # –ë–µ—Ä—ë–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    c.execute("SELECT user_id FROM users WHERE user_id = ?", (message.from_user.id,))
    user_id = c.fetchone()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if user_id is None:
        phone_number = ""
        c.execute('INSERT INTO users (user_id, user_phone_number, user_first_name, user_last_name) VALUES (?, ?, ?, ?)',
                  (message.from_user.id, phone_number, message.from_user.first_name, message.from_user.last_name))
        database.commit()
    database.close()
    full_name = " ".join(filter(None, [message.from_user.first_name, message.from_user.last_name]))
    msg = f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {full_name}! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π."
    bot.send_message(message.from_user.id, msg)
    cmd_home(message)


# –ö–æ–º–∞–Ω–¥–∞ /home
@bot.message_handler(commands=["home"])
def cmd_home(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    wishlist = types.KeyboardButton("üìù –ú–æ–π –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π")
    ideas = types.KeyboardButton("üéÅ –ò–¥–µ–∏ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞")
    find_wishlist = types.KeyboardButton("üîç –ù–∞–π—Ç–∏ –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π")
    commands = types.KeyboardButton("üìå –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    markup.add(wishlist, ideas, find_wishlist, commands)
    bot.send_message(message.from_user.id, "üëÄ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª.", reply_markup=markup)


# –ö–æ–º–∞–Ω–¥–∞ /find_wishlist
@bot.message_handler(commands=["find_wishlist"])
def cmd_find_wishlist(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(home)
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞, —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏.")
    bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å —Ü–∏—Ñ—Ä—ã 7 –∏ –±–µ–∑ –∑–Ω–∞–∫–∞ "+".'
                                           '\n‚úÖ 79876543210\n‚ùå +79876543210\n‚ùå 89876543210', reply_markup=markup)
    bot.register_next_step_handler(message, check_phone_number)


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
def check_phone_number(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        if message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            cmd_home(message)

        else:
            database = sqlite3.connect('db_giftmate.db')
            c = database.cursor()
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            phone_number = message.text
            phone_number.replace(' ', '')

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–æ–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç—É 7XXXXXXXXXX
            if phone_number.startswith('7') and phone_number.isdigit() and len(phone_number) == 11:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                c.execute("SELECT * FROM users WHERE user_phone_number = ?", (phone_number,))
                user = c.fetchone()
                if user is None:
                    bot.send_message(message.from_user.id, "üôÅ –ò–∑–≤–∏–Ω–∏—Ç–µ, —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. "
                                                           "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, "
                                                           "—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏.")
                    cmd_home(message)
                else:
                    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ –∏—â–µ–º –µ–≥–æ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π
                    find_other_wishlist(message, phone_number)
            else:
                bot.send_message(message.from_user.id,
                                 '<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',
                                 parse_mode='html')
                bot.register_next_step_handler(message, check_phone_number)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_phone_number: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∑–∞–¥–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def find_other_wishlist(message, phone_number):
    database = sqlite3.connect('db_giftmate.db')
    c = database.cursor()
    # –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    c.execute(
        "SELECT user_id, user_first_name, user_last_name, wishlist_name, wishlist_description, wishlist_booking, wishlist_booking_user FROM users WHERE user_phone_number = ?",
        (phone_number,))
    result = c.fetchall()[0]
    database.close()
    user_id, first_name, last_name, wishlist_name, wishlist_description, wishlist_booking, wishlist_booking_user = result

    names = wishlist_name.split("@<>@")
    descriptions = wishlist_description.split("@<>@")
    booking = wishlist_booking.split("@<>@")
    booking_user = wishlist_booking_user.split("@<>@")
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    full_name = " ".join(filter(None, [first_name, last_name]))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π
    if user_id != message.from_user.id:

        # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
        if not any(wishlist_name):
            response = f"üôÅ –£ {full_name} –Ω–µ—Ç —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π."
            bot.send_message(message.from_user.id, response)
            cmd_home(message)

        else:
            bot.send_message(message.from_user.id, f"üìù {full_name} —Ö–æ—á–µ—Ç:")
            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∂–µ–ª–∞–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ
            for i in range(1, len(booking)):
                # –ï—Å–ª–∏ –∂–µ–ª–∞–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–°–≤–æ–±–æ–¥–Ω–æ",
                # –∏–Ω–∞—á–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ"
                if booking[i] == "üü¢":
                    status = "üü¢ –°–≤–æ–±–æ–¥–Ω–æ"
                else:
                    booked = ' '.join(map(str, booking_user[i].split("@><@")))
                    status = f"üî¥ {booked} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —ç—Ç–æ –∂–µ–ª–∞–Ω–∏–µ"
                response = f"{status}\n"
                response += f"‚≠êÔ∏è –ñ–µ–ª–∞–Ω–∏–µ ‚Ññ{i}:\n{names[i]}"
                if descriptions[i]:
                    response += f"\nüìé –û–ø–∏—Å–∞–Ω–∏–µ:\n{descriptions[i]}"
                bot.send_message(message.from_user.id, response)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —Å–æ —Å–ø–∏—Å–∫–æ–º –∂–µ–ª–∞–Ω–∏–π –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            free = types.KeyboardButton("üü¢ –£–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
            book = types.KeyboardButton("üî¥ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ")
            home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(free, book, home)
            bot.send_message(message.from_user.id, "‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.", reply_markup=markup)
            bot.register_next_step_handler(message, add_wish_booking_choice, phone_number)

    else:
        cmd_wishlist(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è (—É–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ, –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
def add_wish_booking_choice(message, phone_number):
    try:
        response = message.text.lower()

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–£–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
        if response == "üü¢ —É–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ":
            action = False
            bot.send_message(message.from_user.id,
                             "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —É–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.send_message(message.from_user.id, "‚úÖ4\n‚ùå‚Ññ4")
            bot.register_next_step_handler(message, add_wish_booking, phone_number, action)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ"
        elif response == "üî¥ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ":
            action = True
            bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å.",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.send_message(message.from_user.id, "‚úÖ4\n‚ùå‚Ññ4")
            bot.register_next_step_handler(message, add_wish_booking, phone_number, action)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        elif response == "üîô –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
        else:
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ.")
            bot.register_next_step_handler(message, add_wish_booking_choice, phone_number)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_wish_booking_choice: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–±–∏—Ä–∞–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –±—Ä–æ–Ω–∏—Ä—É–µ—Ç –∂–µ–ª–∞–Ω–∏—è
def add_wish_booking(message, phone_number, action):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ë–µ—Ä—ë–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        c.execute(
            "SELECT wishlist_booking, wishlist_booking_user, wishlist_booking_user_id FROM users WHERE user_phone_number = ?",
            (phone_number,))
        result = c.fetchall()
        current_booking, current_booking_user, current_booking_user_id = result[0]
        current_booking = current_booking.split("@<>@")
        current_booking_user = current_booking_user.split("@<>@")
        current_booking_user_id = current_booking_user_id.split("@<>@")
        # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –∂–µ–ª–∞–Ω–∏–µ
        first_name = f"{message.from_user.first_name}"
        last_name = "" if message.from_user.last_name is None else f"{message.from_user.last_name}"
        name = first_name + "@><@" + last_name
        # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–µ–ª–∞–Ω–∏—è
        first_wish = 1
        number = message.text
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if number == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ"
        elif action and number.isdigit():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
            if first_wish <= int(number) < len(current_booking_user):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∂–µ–ª–∞–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ
                if current_booking[int(number)] == "üü¢":
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–µ–ª–∞–Ω–∏–∏
                    current_booking_user_id[int(number)] = message.from_user.id
                    current_booking_user[int(number)] = name
                    current_booking[int(number)] = "üî¥"
                    new_booking_user_id = "@<>@".join(map(str, current_booking_user_id))
                    new_booking_user = "@<>@".join(map(str, current_booking_user))
                    new_booking = "@<>@".join(map(str, current_booking))
                    c.execute(
                        "UPDATE users SET wishlist_booking = ?, wishlist_booking_user = ?, wishlist_booking_user_id = ? WHERE user_phone_number = ?",
                        (new_booking, new_booking_user, new_booking_user_id, phone_number))
                    database.commit()
                    database.close()

                    bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤–æ!')
                    find_other_wishlist(message, phone_number)
                else:
                    bot.send_message(message.from_user.id,
                                     '<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ñ–µ–ª–∞–Ω–∏–µ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∂–µ–ª–∞–Ω–∏–µ.',
                                     parse_mode='html')
                    bot.register_next_step_handler(message, add_wish_booking, phone_number, action)
            else:
                bot.send_message(message.from_user.id,
                                 '<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',
                                 parse_mode='html')
                bot.register_next_step_handler(message, add_wish_booking, phone_number, action)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–£–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
        elif not action and number.isdigit():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∂–µ–ª–∞–Ω–∏–µ
            if str(message.from_user.id) in current_booking_user_id:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
                if first_wish <= int(number) < len(current_booking_user):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∂–µ–ª–∞–Ω–∏–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ
                    if current_booking[int(number)] == "üî¥":
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —ç—Ç–æ –∂–µ–ª–∞–Ω–∏–µ
                        if current_booking_user_id[int(number)] == f"{message.from_user.id}":
                            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–µ–ª–∞–Ω–∏–∏
                            current_booking_user_id[int(number)] = ""
                            current_booking_user[int(number)] = ""
                            current_booking[int(number)] = "üü¢"
                            new_booking_user_id = "@<>@".join(map(str, current_booking_user_id))
                            new_booking_user = "@<>@".join(map(str, current_booking_user))
                            new_booking = "@<>@".join(map(str, current_booking))
                            c.execute(
                                "UPDATE users SET wishlist_booking = ?, wishlist_booking_user = ?, wishlist_booking_user_id = ? WHERE user_phone_number = ?",
                                (new_booking, new_booking_user, new_booking_user_id, phone_number))
                            database.commit()
                            database.close()

                            bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤–æ!')
                            find_other_wishlist(message, phone_number)
                        else:
                            bot.send_message(message.from_user.id,
                                             "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ñ–µ–ª–∞–Ω–∏–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–µ –≤–∞–º–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∂–µ–ª–∞–Ω–∏–µ.",
                                             parse_mode='html')
                            bot.register_next_step_handler(message, add_wish_booking, phone_number, action)
                    else:
                        bot.send_message(message.from_user.id,
                                         "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ñ–µ–ª–∞–Ω–∏–µ –Ω–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∂–µ–ª–∞–Ω–∏–µ.",
                                         parse_mode='html')
                        bot.register_next_step_handler(message, add_wish_booking, phone_number, action)
                else:
                    bot.send_message(message.from_user.id,
                                     "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
                                     parse_mode='html')
                    bot.register_next_step_handler(message, add_wish_booking, phone_number, action)
            else:
                bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –í—ã –Ω–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –Ω–∏–∫–∞–∫–æ–µ –∂–µ–ª–∞–Ω–∏–µ.",
                                 parse_mode='html')
                cmd_home(message)
        else:
            bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", parse_mode='html')
            bot.register_next_step_handler(message, add_wish_booking, phone_number, action)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_wish_booking: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –ö–æ–º–∞–Ω–¥–∞ /wishlist
@bot.message_handler(commands=["wishlist"])
def cmd_wishlist(message):
    database = sqlite3.connect("db_giftmate.db")
    c = database.cursor()
    # –ë–µ—Ä—ë–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    c.execute("SELECT user_phone_number FROM users WHERE user_id = ?", (message.from_user.id,))
    user_phone_number = c.fetchone()[0]

    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω —Ä–∞–Ω–µ–µ, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞
    if not user_phone_number:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(home)
        bot.send_message(message.from_user.id,
                         "üìû –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        bot.send_message(message.from_user.id,
                         '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å —Ü–∏—Ñ—Ä—ã 7 –∏ –±–µ–∑ –∑–Ω–∞–∫–∞ "+".\n'
                         '‚úÖ 79876543210\n‚ùå +79876543210\n‚ùå 89876543210', reply_markup=markup)
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        bot.register_next_step_handler(message, add_phone_number)

    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –≤–≤–µ–¥–µ–Ω, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ë–µ—Ä—ë–º –∂–µ–ª–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è –∫ –∂–µ–ª–∞–Ω–∏—è–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        c.execute("SELECT wishlist_name, wishlist_description FROM users WHERE user_id = ?", (message.from_user.id,))
        result = c.fetchone()
        database.close()
        if result == ('', ''):
            bot.send_message(message.from_user.id, "üôÅ –£ –≤–∞—Å –Ω–µ—Ç —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π.")

        else:
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
            names = result[0].split("@<>@")
            descriptions = result[1].split("@<>@")
            for i in range(1, len(names)):
                response = f"‚≠êÔ∏è –ñ–µ–ª–∞–Ω–∏–µ ‚Ññ{i}:\n{names[i]}"
                if descriptions[i]:
                    response += f"\nüìé –û–ø–∏—Å–∞–Ω–∏–µ:\n{descriptions[i]}"
                bot.send_message(message.from_user.id, response)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —Å–æ —Å–ø–∏—Å–∫–æ–º –∂–µ–ª–∞–Ω–∏–π
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        add = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ")
        edit = types.KeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ")
        delete = types.KeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ")
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(add, edit, delete, home)
        bot.send_message(message.from_user.id, "‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def add_phone_number(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        if message.text == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)
        else:
            database = sqlite3.connect("db_giftmate.db")
            c = database.cursor()
            c.execute("SELECT user_phone_number FROM users")
            phone_numbers = c.fetchall()
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            phone_number = message.text
            phone_number.replace(' ', '')
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–æ–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç—É 7XXXXXXXXXX
            if phone_number.startswith("7") and (phone_number.isdigit()) and len(phone_number) == 11:
                if not any(phone_number in phone[0] for phone in phone_numbers):
                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    c.execute(
                        "UPDATE users SET user_phone_number = ?, wishlist_name = '', wishlist_description = '', wishlist_booking = '', wishlist_booking_user = '', wishlist_booking_user_id = '' WHERE user_id = ?",
                        (phone_number, message.from_user.id))
                    database.commit()
                    database.close()
                    bot.send_message(message.from_user.id,
                                     'üëå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.')
                    cmd_wishlist(message)
                else:
                    bot.send_message(message.from_user.id,
                                     "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –î–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", parse_mode='html')
                    cmd_home(message)
            else:
                bot.send_message(message.from_user.id,
                                 "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
                                 parse_mode='html')
                bot.register_next_step_handler(message, add_phone_number)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_phone_number: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –∂–µ–ª–∞–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_wish_name(message):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        c.execute(
            "SELECT wishlist_name, wishlist_booking, wishlist_booking_user, wishlist_booking_user_id FROM users WHERE user_id = ?",
            (message.from_user.id,))
        result = c.fetchall()[0]
        current_wishlist_name, current_wishlist_booking, \
            current_wishlist_booking_user, current_wishlist_booking_user_id = result
        new_wishlist_name = message.text
        length = len(current_wishlist_name.split("@<>@"))
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–µ–ª–∞–Ω–∏–π
        max_length = 15
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        new_wishlist_booking = "üü¢"
        new_wishlist_booking_user = "@><@"
        new_wishlist_booking_user_id = ""
        if new_wishlist_name == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)
        else:
            if length <= max_length:
                if current_wishlist_name is not None:
                    updated_wishlist_name = current_wishlist_name + "@<>@" + new_wishlist_name
                    updated_wishlist_booking = current_wishlist_booking + "@<>@" + new_wishlist_booking
                    updated_wishlist_booking_user = current_wishlist_booking_user + "@<>@" + new_wishlist_booking_user
                    updated_wishlist_booking_user_id = current_wishlist_booking_user_id + "@<>@" + new_wishlist_booking_user_id
                else:
                    updated_wishlist_name = new_wishlist_name
                    updated_wishlist_booking = new_wishlist_booking
                    updated_wishlist_booking_user = new_wishlist_booking_user
                    updated_wishlist_booking_user_id = new_wishlist_booking_user_id
                # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                c.execute(
                    "UPDATE users SET wishlist_name = ?, wishlist_booking = ?, wishlist_booking_user = ?, wishlist_booking_user_id = ? WHERE user_id = ?",
                    (updated_wishlist_name, updated_wishlist_booking, updated_wishlist_booking_user,
                     updated_wishlist_booking_user_id, message.from_user.id))
                database.commit()
                database.close()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                yes = types.KeyboardButton("‚úÖ –î–∞")
                no = types.KeyboardButton("‚ùå –ù–µ—Ç")
                markup.add(yes, no)
                bot.send_message(message.from_user.id, "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –∂–µ–ª–∞–Ω–∏—é?", reply_markup=markup)
                bot.register_next_step_handler(message, add_wish_description)
            else:
                bot.send_message(message.from_user.id,
                                 "–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–µ–ª–∞–Ω–∏–π, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ.")
                cmd_wishlist(message)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_wish_name: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è (–¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ)
def add_wish_description(message):
    try:
        response = message.text.lower()
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–î–∞"
        if response in ("–¥–∞–≤–∞–π", "–¥–∞", "‚úÖ –¥–∞"):
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, add_wish_to_database)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ù–µ—Ç"
        elif response in ("–Ω–µ", "–Ω–µ—Ç", "‚ùå –Ω–µ—Ç"):
            bot.send_message(message.from_user.id, "–•–æ—Ä–æ—à–æ. –í–∞—à–µ –∂–µ–ª–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
            add_wish_to_database(message)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
        else:
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ.")
            bot.register_next_step_handler(message, add_wish_description)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_wish_description: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_wish_to_database(message):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        c.execute("SELECT wishlist_description FROM users WHERE user_id = ?", (message.from_user.id,))
        current_wishlist_description = c.fetchone()[0]
        response = message.text.lower()

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ù–µ—Ç"
        if response == "–Ω–µ" or response == "–Ω–µ—Ç" or response == "‚ùå –Ω–µ—Ç":
            new_wishlist_description = ""
        else:
            new_wishlist_description = message.text
        if current_wishlist_description is not None:
            updated_wishlist_description = current_wishlist_description + "@<>@" + new_wishlist_description
        else:
            updated_wishlist_description = new_wishlist_description
        c.execute("UPDATE users SET wishlist_description = ? WHERE user_id = ?",
                  (updated_wishlist_description, message.from_user.id))
        database.commit()
        database.close()
        cmd_wishlist(message)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function add_wish_to_database: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∂–µ–ª–∞–Ω–∏—è
def edit_wish(message):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        c.execute("SELECT wishlist_name FROM users WHERE user_id = ?", (message.from_user.id,))
        current_wishlist_name = c.fetchone()[0].split("@<>@")
        database.close()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –Ω–µ –ø—É—Å—Ç–æ–π
        if len(current_wishlist_name) == 1:
            bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –£ –≤–∞—Å –Ω–µ—Ç —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π.", parse_mode='html')
            cmd_wishlist(message)
        first_wish = 1
        number = message.text
        if number == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
            if first_wish <= int(number) < len(current_wishlist_name):
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                wish_name = types.KeyboardButton("üéÅ –ñ–µ–ª–∞–Ω–∏–µ")
                wish_description = types.KeyboardButton("üìé –û–ø–∏—Å–∞–Ω–∏–µ")
                wish_all = types.KeyboardButton("üìÑ –í—Å—ë")
                markup.add(wish_name, wish_description, wish_all)
                bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å.", reply_markup=markup)
                bot.register_next_step_handler(message, edit_wish_choice, int(number))
            else:
                bot.send_message(message.from_user.id,
                                 "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
                                 parse_mode='html')
                bot.register_next_step_handler(message, edit_wish)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function edit_wish: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è (—Ä–µ–¥. –∂–µ–ª–∞–Ω–∏–µ, —Ä–µ–¥. –æ–ø–∏—Å–∞–Ω–∏–µ, —Ä–µ–¥. –≤—Å—ë)
def edit_wish_choice(message, number):
    try:
        response = message.text.lower()

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ñ–µ–ª–∞–Ω–∏–µ"
        if response == "–∂–µ–ª–∞–Ω–∏–µ" or response == "üéÅ –∂–µ–ª–∞–Ω–∏–µ":
            choice = False
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ:",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, edit_wish_name, number, choice)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–û–ø–∏—Å–∞–Ω–∏–µ"
        elif response == "–æ–ø–∏—Å–∞–Ω–∏–µ" or response == "üìé –æ–ø–∏—Å–∞–Ω–∏–µ":
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, edit_wish_description, number)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–í—Å—ë"
        elif response == "–≤—Å–µ" or response == "–≤—Å—ë" or response == "üìÑ –≤—Å—ë":
            choice = True
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ:",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, edit_wish_name, number, choice)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
        else:
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ.")

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function edit_wish_choice: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∂–µ–ª–∞–Ω–∏—è –∏/–∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—è
def edit_wish_name(message, number, choice):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–º—è —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π
        c.execute("SELECT wishlist_name FROM users WHERE user_id = ?", (message.from_user.id,))
        current_wishlist_name = c.fetchone()[0].split("@<>@")
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_wishlist_name = message.text

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        if new_wishlist_name == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∂–µ–ª–∞–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            current_wishlist_name[number] = new_wishlist_name
            new_wishlist_name = "@<>@".join(map(str, current_wishlist_name))
            c.execute("UPDATE users SET wishlist_name = ? WHERE user_id = ?", (new_wishlist_name, message.from_user.id))
            database.commit()
            database.close()
            bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ!")

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        if choice:
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:",
                             reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, edit_wish_description, number)
        else:
            cmd_wishlist(message)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function edit_wish_name: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
def edit_wish_description(message, number):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        c.execute("SELECT wishlist_description FROM users WHERE user_id = ?", (message.from_user.id,))
        current_wishlist_description = c.fetchone()[0].split("@<>@")
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_wishlist_description = message.text
        current_wishlist_description[number] = new_wishlist_description
        new_wishlist_description = "@<>@".join(map(str, current_wishlist_description))
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        c.execute("UPDATE users SET wishlist_description = ? WHERE user_id = ?",
                  (new_wishlist_description, message.from_user.id))
        database.commit()
        database.close()
        bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ!")
        cmd_wishlist(message)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function edit_wish_description: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ (—É–¥–∞–ª–∏—Ç—å –≤—Å—ë, —É–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ)
def delete_wish(message):
    try:
        database = sqlite3.connect("db_giftmate.db")
        c = database.cursor()
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        c.execute("SELECT wishlist_name FROM users WHERE user_id = ?", (message.from_user.id,))
        current_wishlist_name = c.fetchone()[0].split("@<>@")
        database.close()
        first_wish = 1

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        if message.text == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            cmd_home(message)
        else:
            number = message.text
            if current_wishlist_name is not None:
                # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                # –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∂–µ–ª–∞–Ω–∏—è
                if first_wish <= int(number) < len(current_wishlist_name):
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏ - "–£–¥–∞–ª–∏—Ç—å –≤—Å—ë" –∏ "–£–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ"
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    wish_all = types.KeyboardButton("üìÑ –í—Å—ë")
                    wish_description = types.KeyboardButton("üìé –û–ø–∏—Å–∞–Ω–∏–µ")
                    markup.add(wish_all, wish_description)
                    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å.",
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, delete_wish_choice, int(number))
                else:
                    bot.send_message(message.from_user.id,
                                     "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –ù–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è –≤–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
                                     parse_mode='html')
                    bot.register_next_step_handler(message, edit_wish)
            else:
                bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –û—à–∏–±–∫–∞.</b> –£ –≤–∞—Å –Ω–µ—Ç —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–Ω–∏–π.", parse_mode='html')
                cmd_wishlist(message)

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function delete_wish: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∫ –∂–µ–ª–∞–Ω–∏—é
def delete_wish_choice(message, number):
    try:
        response = message.text.lower()

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –≤—Å—ë –∂–µ–ª–∞–Ω–∏–µ
        if response in ("–≤—Å–µ", "–≤—Å—ë", "üìÑ –≤—Å—ë"):
            database = sqlite3.connect("db_giftmate.db")
            c = database.cursor()
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–∏—Ö –∂–µ–ª–∞–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            c.execute(
                "SELECT wishlist_booking, wishlist_booking_user, wishlist_booking_user_id, wishlist_name, wishlist_description FROM users WHERE user_id = ?",
                (message.from_user.id,))
            current_wishlist_booking, current_wishlist_booking_user, current_wishlist_booking_user_id, \
                current_wishlist_name, current_wishlist_description = c.fetchone()

            # –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∂–µ–ª–∞–Ω–∏—è—Ö –Ω–∞ —Å–ø–∏—Å–∫–∏
            current_wishlist_booking = current_wishlist_booking.split("@<>@")
            current_wishlist_booking_user = current_wishlist_booking_user.split("@<>@")
            current_wishlist_booking_user_id = current_wishlist_booking_user_id.split("@<>@")
            current_wishlist_name = current_wishlist_name.split("@<>@")
            current_wishlist_description = current_wishlist_description.split("@<>@")

            # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∂–µ–ª–∞–Ω–∏–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∏–∑ –∫–∞–∂–¥–æ–≥–æ —Å–ø–∏—Å–∫–∞
            current_wishlist_booking.pop(number)
            current_wishlist_booking_user.pop(number)
            current_wishlist_booking_user_id.pop(number)
            current_wishlist_name.pop(number)
            current_wishlist_description.pop(number)

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ –≤ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ "@<>@"
            new_wishlist_booking = "@<>@".join(map(str, current_wishlist_booking))
            new_wishlist_booking_user = "@<>@".join(map(str, current_wishlist_booking_user))
            new_wishlist_booking_user_id = "@<>@".join(map(str, current_wishlist_booking_user_id))
            new_wishlist_name = "@<>@".join(map(str, current_wishlist_name))
            new_wishlist_description = "@<>@".join(map(str, current_wishlist_description))

            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∂–µ–ª–∞–Ω–∏—è—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            c.execute(
                "UPDATE users SET wishlist_description = ?, wishlist_name = ?, wishlist_booking = ?, wishlist_booking_user = ?, wishlist_booking_user_id = ? WHERE user_id = ?",
                (new_wishlist_description, new_wishlist_name, new_wishlist_booking, new_wishlist_booking_user,
                 new_wishlist_booking_user_id, message.from_user.id))
            database.commit()
            database.close()
            bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ!")
            cmd_wishlist(message)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –∂–µ–ª–∞–Ω–∏—é
        elif response in ("–æ–ø–∏—Å–∞–Ω–∏–µ", "üìé –æ–ø–∏—Å–∞–Ω–∏–µ"):
            database = sqlite3.connect("db_giftmate.db")
            c = database.cursor()
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–∏—Ö –∂–µ–ª–∞–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            c.execute("SELECT wishlist_description FROM users WHERE user_id = ?", (message.from_user.id,))
            current_wishlist_description = c.fetchone()[0].split("@<>@")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            if current_wishlist_description[number] == "":
                bot.send_message(message.from_user.id, "–£ —ç—Ç–æ–≥–æ –∂–µ–ª–∞–Ω–∏—è –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è.")
            else:
                # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ–ø–∏—Å–∞–Ω–∏–∏ –∂–µ–ª–∞–Ω–∏—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
                current_wishlist_description[number] = ""
                new_wishlist_description = "@<>@".join(map(str, current_wishlist_description))

                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ–ø–∏—Å–∞–Ω–∏–∏ –∂–µ–ª–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                c.execute("UPDATE users SET wishlist_description = ? WHERE user_id = ?",
                          (new_wishlist_description, message.from_user.id))
                database.commit()
                database.close()
                bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ!")
            cmd_wishlist(message)
        else:
            bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ.")

    except (TypeError, sqlite3.Error) as e:
        print(f"Error with function delete_wish: {e}")
        bot.send_message(message.from_user.id, "<b>‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.</b> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", parse_mode='html')
        cmd_home(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=["text"])
def get_text_messages(message):
    if message.text == "üìù –ú–æ–π –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π":
        cmd_wishlist(message)

    elif message.text == "üîç –ù–∞–π—Ç–∏ –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π":
        cmd_find_wishlist(message)

    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(home)
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, add_wish_name)

    elif message.text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(home)
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.",
                         reply_markup=markup)
        bot.send_message(message.from_user.id, "‚úÖ4\n‚ùå‚Ññ4")
        bot.register_next_step_handler(message, edit_wish)

    elif message.text == "‚ûñ –£–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(home)
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —É–¥–∞–ª–∏—Ç—å.",
                         reply_markup=markup)
        bot.send_message(message.from_user.id, "‚úÖ4\n‚ùå‚Ññ4")
        bot.register_next_step_handler(message, delete_wish)

    elif message.text == "üéÅ –ò–¥–µ–∏ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
        btn2 = types.KeyboardButton("üçΩ –ö—É—Ö–Ω—è")
        btn3 = types.KeyboardButton("‚ú® –ó–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–∞")
        btn4 = types.KeyboardButton("üë®‚ÄçüöÄ –°—Ç–∏–ª—å –∏ –º–æ–¥–∞")
        btn5 = types.KeyboardButton("üí™ –°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö")
        btn6 = types.KeyboardButton("üõã –ò–Ω—Ç–µ—Ä—å–µ—Ä")
        btn7 = types.KeyboardButton("üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
        btn8 = types.KeyboardButton("üé≤ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
        btn9 = types.KeyboardButton("üõ†Ô∏è –°–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏")
        home = types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, home)
        bot.send_message(message.from_user.id, '‚¨á –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.', reply_markup=markup)

    elif message.text == "üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏":
        send_random_items(message, technologies)
    elif message.text == "üçΩ –ö—É—Ö–Ω—è":
        send_random_items(message, kitchen)
    elif message.text == "‚ú® –ó–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–∞":
        send_random_items(message, healthAndBeauty)
    elif message.text == "üë®‚ÄçüöÄ –°—Ç–∏–ª—å –∏ –º–æ–¥–∞":
        send_random_items(message, styleAndFashion)
    elif message.text == "üí™ –°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö":
        send_random_items(message, sportsAndRecreation)
    elif message.text == "üõã –ò–Ω—Ç–µ—Ä—å–µ—Ä":
        send_random_items(message, interior)
    elif message.text == "üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ":
        send_random_items(message, creativity)
    elif message.text == "üé≤ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è":
        send_random_items(message, entertainment)
    elif message.text == "üõ†Ô∏è –°–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏":
        send_random_items(message, diy)

    elif message.text == "üìå –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥":
        text = "<b>üìù –ú–æ–π –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∂–µ–ª–∞–Ω–∏–π.\n\n" \
               "<b>‚ûï –î–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –∂–µ–ª–∞–Ω–∏—è –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –∫–∞–∂–¥–æ–º—É –∂–µ–ª–∞–Ω–∏—é.\n\n" \
               "<b>‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏/–∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∂–µ–ª–∞–Ω–∏—è –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ.\n\n" \
               "<b>‚ûñ –£–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º —É–¥–∞–ª–∏—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∂–µ–ª–∞–Ω–∏–µ –∏–ª–∏ –∂–µ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞.\n\n" \
               "<b>üéÅ –ò–¥–µ–∏ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.\n\n" \
               "<b>üîç –ù–∞–π—Ç–∏ –°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n" \
               "<b>üü¢ –£–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–±—Ä–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n" \
               "<b>üî¥ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ</b> ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        home = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(home)
        bot.send_message(message.from_user.id, text, parse_mode='html', reply_markup=markup)

    elif message.text == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        cmd_home(message)

    else:
        msg = message.text.lower()
        if msg in ("–ø—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–µ—Ç!", "–ø—Ä–∏–≤–µ—Ç."):
            bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç!")
        elif msg in ("–∫–∞–∫ –¥–µ–ª–∞", "–∫–∞–∫ –¥–µ–ª–∞?", "–∫–∞–∫ –¥–µ–ª–∞."):
            bot.send_message(message.from_user.id, "–•–æ—Ä–æ—à–æ!")
        elif msg in ("—á—Ç–æ –¥–µ–ª–∞–µ—à—å", "—á—Ç–æ –¥–µ–ª–∞–µ—à—å?", "—á—Ç–æ –¥–µ–ª–∞–µ—à—å."):
            bot.send_message(message.from_user.id, "–°–æ–∑–¥–∞—é —Å–ø–∏—Å–∫–∏ –∂–µ–ª–∞–Ω–∏–π.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=["photo"])
def get_user_photo(message):
    photo_answer = [
        "–ö–∞–∫–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞!",
        "–≠—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –∏–¥–µ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –º–æ–º–µ–Ω—Ç–∞.",
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.",
        "–ö–∞–∫–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–∞ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!",
        "–≠—Ç–æ —Ç–æ—á–Ω–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è.",
        "–≠—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞!"]
    bot.send_message(message.chat.id, photo_answer[random.randint(0, len(photo_answer))])


# –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
bot.polling(none_stop=True)
